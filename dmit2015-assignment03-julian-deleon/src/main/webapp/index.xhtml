<ui:composition
        xmlns="http://www.w3.org/1999/xhtml"
        xmlns:faces="jakarta.faces"
        xmlns:ui="jakarta.faces.facelets"
        xmlns:f="jakarta.faces.core"
        xmlns:h="jakarta.faces.html"
        xmlns:pt="jakarta.faces.passthrough"
        xmlns:cc="jakarta.faces.composite"
        xmlns:c="jakarta.tags.core"
        xmlns:fn="jakarta.tags.functions"
        xmlns:o="http://omnifaces.org/ui"
        xmlns:of="http://omnifaces.org/functions"
        xmlns:p="http://primefaces.org/ui"
        template="/WEB-INF/faces-templates/layout.xhtml"
>

    <ui:param name="title" value="About Me"/>

    <ui:define name="maincontent">
        <!-- If FacesContext message sent from init() method annotated with @PostConstruct in the Faces backing bean class are not shown on page:
            1) Remove the @PostConstruct annotation from the Faces backing bean class
            2) Add metadata tag shown below to execute the init() method
        <f:metadata>
            <f:viewParam name="dummy" />
            <f:event type="postInvokeAction" listener="#{currentBeanView.init}" />
        </f:metadata>
        -->

        <h:form>
            <p:panelGrid columns="2" style="margin: 0 auto;">
                <p:panel header="About Me" style="max-width: 80%">
                    <p>Julian De Leon <br/> Computer Software Development Student</p>
                    <p:graphicImage
                        value="#{resource['img/julian-profile-image-cropped.jpeg']}"
                        alt="Picture of me"
                        style="max-width: 50%;"
                    />
                </p:panel>

                <p:panel header="DMIT 2015 Assignment 3">
                    <p>
                        This assignment focuses on test-driven development with JUnit test cases, as well as
                        Wildfly application deployment to OpenShift Developer Sandbox.
                    </p>
                </p:panel>
            </p:panelGrid>
        </h:form>

        <!--Display all messages in FacesContext -->
        <p:messages id="messages">
            <p:autoUpdate/>
        </p:messages>
        <p:growl id="growl"/>

        <!--Example on conditional rendering, you will need to change the rendered attribute value to an EL value expression -->
        <p:outputPanel id="outputPanel">
            <h:outputText
                    rendered="false"
                    value="Hello Faces World!"/>
        </p:outputPanel>
    </ui:define>

</ui:composition>